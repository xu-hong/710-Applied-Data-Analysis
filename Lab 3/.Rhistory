for (j in 1:nn){
result <- pwr.t.test(n=n[j], d = NULL, sig.level = 0.05, power = p[i], alternative = "greater")
samsize[j,i] <- ceiling(result$d)
}
}
xrange <- range(n)
yrange <- round(range(samsize))
colors <- rainbow(length(p))
plot(xrange, yrange, type="n", xlab="Sample size (n)", ylab="Effect Size (d)", las = 1)
for (i in 1:np) {
lines(n, samsize[,i], type="l", lwd=2, col=colors[i])
}
n <- seq(from = 10, to = 100, by = 5)
nn <- length(n)
p <- seq(from = 0.6, to = 0.8, by = 0.1)
np <- length(p)
samsize <- array(numeric(nn*np), dim=c(nn,np))
for (i in 1:np){
for (j in 1:nn){
result <- pwr.t.test(n=n[j], d = NULL, sig.level = 0.05, power = p[i], alternative = "greater")
samsize[j,i] <- result$d
}
}
xrange <- range(n)
yrange <- round(range(samsize))
colors <- rainbow(length(p))
plot(xrange, yrange, type="n", xlab="Sample size (n)", ylab="Effect Size (d)", las = 1)
for (i in 1:np) {
l
;
}
#Draw the graph
n <- seq(from = 10, to = 100, by = 5)
nn <- length(n)
p <- seq(from = 0.6, to = 0.8, by = 0.1)
np <- length(p)
samsize <- array(numeric(nn*np), dim=c(nn,np))
for (i in 1:np){
for (j in 1:nn){
result <- pwr.t.test(n=n[j], d = NULL, sig.level = 0.05, power = p[i], alternative = "greater")
samsize[j,i] <- result$d
}
}
xrange <- range(n)
yrange <- round(range(samsize))
colors <- rainbow(length(p))
plot(xrange, yrange, type="n", xlab="Sample size (n)", ylab="Effect Size (d)", las = 1)
for (i in 1:np) {
lines(n, samsize[,i], type="l", lwd=2, col=colors[i])
}
abline(v=0, h=seq(0, yrange[2], 0.2), lty=2, col="grey89")
abline(h=0, v=seq(xrange[1], xrange[2], 10), lty=2, col="grey89")
title("Effect Size Estimation for T-test\n Sig=0.05 (Onetailed)")
legend("topright", title="Power", as.character(p),
fill=colors)
?pairwise.t.test
# normal assumption?
boxplot(log(ChaveMoist) ~ Site, las=1,
ylab = "log(Biomass)", xlab = "Sites")
points(jitter(rep(1, length(Site[Site==1])), f=4),
log(ChaveMoist[Site==1]), col = "darkgreen")
points(jitter(rep(2, length(Site[Site==2])), f=4),
log(ChaveMoist[Site==2]), col = "darkred")
points(jitter(rep(3, length(Site[Site==3])), f=4),
log(ChaveMoist[Site==3]), col = "darkblue")
qqnorm(ChaveMoist[Site==1])
qqline(ChaveMoist[Site==1])
# log does not seem to make much difference
qqnorm(log(ChaveMoist[Site==1]))
qqline(log(ChaveMoist[Site==1]))
# do not reject the null hypothesis!
shapiro.test(ChaveMoist[Site==1])
sd(ChaveMoist[Site==1])/sd(ChaveMoist[Site==2])
sd(ChaveMoist[Site==2])/sd(ChaveMoist[Site==3])
sd(ChaveMoist[Site==1])/sd(ChaveMoist[Site==3])
# one way ANOVA
mod1 <- aov(ChaveMoist ~ factor(Site))
summary(mod1)
#To determine which of the means are significantly different from one another
#we conduct a post-hoc test.
TukeyHSD(mod1)
plot(TukeyHSD(mod1))
setwd("/Users/xuhong/Documents/Duke/Term 1 Courses/ENVIRON 710 Applied data analysis/Lab/Lab 7")
adat <- read.csv("Afrplots.csv", header=T)
adat$Site <- as.factor(rep(c(rep(1,10), rep(2,10), rep(3,10)), 2))
bdat <- adat[adat$CensusNo == 1, ]
attach(bdat)
par(mfrow=c(2,2))
boxplot(ChaveMoist ~ Site, las=1, ylab="Biomass", xlab="Sites")
points(jitter(rep(1, length(Site[Site==1])), f=4), ChaveMoist[Site==1], col = "darkgreen")
points(jitter(rep(2, length(Site[Site==2])), f=4), ChaveMoist[Site==2], col = "darkblue")
points(jitter(rep(3, length(Site[Site==3])), f=4), ChaveMoist[Site==3], col = "darkred")
# normal assumption?
boxplot(log(ChaveMoist) ~ Site, las=1,
ylab = "log(Biomass)", xlab = "Sites")
points(jitter(rep(1, length(Site[Site==1])), f=4),
log(ChaveMoist[Site==1]), col = "darkgreen")
points(jitter(rep(2, length(Site[Site==2])), f=4),
log(ChaveMoist[Site==2]), col = "darkred")
points(jitter(rep(3, length(Site[Site==3])), f=4),
log(ChaveMoist[Site==3]), col = "darkblue")
qqnorm(ChaveMoist[Site==1])
qqline(ChaveMoist[Site==1])
# log does not seem to make much difference
qqnorm(log(ChaveMoist[Site==1]))
qqline(log(ChaveMoist[Site==1]))
# do not reject the null hypothesis!
shapiro.test(ChaveMoist[Site==1])
sd(ChaveMoist[Site==1])/sd(ChaveMoist[Site==2])
sd(ChaveMoist[Site==2])/sd(ChaveMoist[Site==3])
sd(ChaveMoist[Site==1])/sd(ChaveMoist[Site==3])
# one way ANOVA
mod1 <- aov(ChaveMoist ~ factor(Site))
summary(mod1)
#To determine which of the means are significantly different from one another
#we conduct a post-hoc test.
TukeyHSD(mod1)
plot(TukeyHSD(mod1))
pairwise.t.test(ChaveMoist, Site)
qnorm(0.05)
?qnorm
qnorm(0.05, 20, 4)
(qnorm(0.05, 20, 4) - 20)/(4/sqrt(10))
(qnorm(0.05, 20, 4) - 20)/(4/sqrt(100))
pnorm(13.42059, 19, 4)
pnorm(19.1, mean=20, sd=4)
qnorm(0.05, 20, 4/10)
pnorm(19.34206, mean=19, sd=4)
pnorm(19.34206, mean=19, sd=4/10)
pt(0.95, df=4)
qt(0.95, df=4)
adat <- read.csv("Afrplots.csv", header=T)
adat$Site <- as.factor(rep(c(rep(1,10), rep(2,10), rep(3,10)), 2))
bdat <- adat[adat$CensusNo == 1, ]
attach(bdat)
par(mfrow=c(2,2))
boxplot(ChaveMoist ~ Site, las=1, ylab="Biomass", xlab="Sites")
points(jitter(rep(1, length(Site[Site==1])), f=4), ChaveMoist[Site==1], col = "darkgreen")
points(jitter(rep(2, length(Site[Site==2])), f=4), ChaveMoist[Site==2], col = "darkblue")
points(jitter(rep(3, length(Site[Site==3])), f=4), ChaveMoist[Site==3], col = "darkred")
?jitter
boxplot(log(ChaveMoist) ~ Site, las=1,
ylab = "log(Biomass)", xlab = "Sites")
points(jitter(rep(1, length(Site[Site==1])), f=4),
log(ChaveMoist[Site==1]), col = "darkgreen")
points(jitter(rep(2, length(Site[Site==2])), f=4),
log(ChaveMoist[Site==2]), col = "darkred")
points(jitter(rep(3, length(Site[Site==3])), f=4),
log(ChaveMoist[Site==3]), col = "darkblue")
qqnorm(ChaveMoist[Site==1])
qqline(ChaveMoist[Site==1])
shapiro.test(ChaveMoist[Site==1])
# one way ANOVA
mod1 <- aov(ChaveMoist ~ factor(Site))
summary(mod1)
mod1 <- aov(ChaveMoist ~ Site)
summary(mod1)
TukeyHSD(mod1)
plot(TukeyHSD(mod1))
pairwise.t.test(ChaveMoist, Site)
list(Site)
Site
str(Site)
class(Site)
typeof(Site)
str(list(Site))
site.mean <- tapply(ChaveMoist, Site, mean)
site.mean
site.n <- tapply(ChaveMoist, list(Site), length)
site.n
site.sd <- tapply(ChaveMoist, list(Site), sd)
site.se <- site.sd/sqrt(site.n)
site.se[is.na]
?is.an
?is.na
bp <- boxplot(log(ChaveMoist) ~ Site, las=1,
ylab = "log(Biomass)", xlab = "Sites")
bp
min(bp)
bp
len(bp)
length(bp)
bp[1]
error.bars <- function(yvalues, se, nm){
xv <- barplot(yvalues, ylim=c(0, (max(yvalues)+max(se))),
names=nm, ylab=deparse(substitute(yvalues)), las=1)
g <- (max(xv)-min(xv))/50
for (i in 1:length(xv)){
arrows(xv[i], yvalues[i] + se[i], xv[i],
yvalues[i]-se[i], length=0.1, angle=90,
code=3)
}
}
site.mean <- tapply(ChaveMoist, Site, mean)
site.n <- tapply(ChaveMoist, list(Site), length)
site.sd <- tapply(ChaveMoist, list(Site), sd)
site.se <- site.sd/sqrt(site.n)
site.se[is.na(site.se)==T] <- 0
labls <- as.character(levels(Site))
yvals <- as.vector(site.mean)
error.bars(yvalues = yvals, se = site.se, nm = labls)
cc <- c('a')
is.character(cc)
cl <- list('a')
is.character(cl)
is.list(cl)
class(cl)
class(cc)
typeof(cl)
typeof(cc)
str(cc)
str(cl)
max(bp)
bp[1]
bp <- barplot(c(1,2))
yvals
bp <- barplot(c(1,2), names=c(1,2))
bp
max(bp)
bp[1]
?barplot
require(grDevices) # for colours
tN <- table(Ni <- stats::rpois(100, lambda = 5))
r <- barplot(tN, col = rainbow(20))
tN
str(tN)
r
?arrows
?tapply
?barplot
class(tN)
typeof(tN)
sex_char <- c("m", "m", "m")
sex_factor <- factor(sex_char, levels = c("m", "f"))
table(sex_factor)
typeof(table(sex_factor))
class(table(sex_factor))
str(table(sex_factor))
?array
arr <- array(1:3, 3)
arr
str(arr)
arr <- array(1:3, 6)
arr
setwd("/Users/xuhong/Documents/Duke/Term 1 Courses/ENVIRON 710 Applied data analysis/Lab/Lab 8")
?aov
feed <- read.csv("Growth.csv", header=T)
head(feed)
levels(feed$supplement)
levels(feed$diet)
?boxplot
with(feed, boxplot(gain~supplement+diet))
par(mfrow=c(1,1))
feed <- read.csv("Growth.csv", header=T)
with(feed, boxplot(gain~supplement+diet))
with(feed, boxplot(gain~supplement+diet, las=1))
with(feed, boxplot(gain~supplement+diet, las=2))
with(feed, boxplot(gain~supplement+*iet, las=2))
with(feed, boxplot(gain~supplement*iet, las=2))
with(feed, boxplot(gain~supplement*diet, las=2))
with(feed, boxplot(gain~supplement*diet, las=2, ylab='weight gain, pounds'))
?plot
with(feed, boxplot(gain~supplement*diet, col=c('darkblue', 'green', 'orange'), las=2, ylab='weight gain, pounds'))
with(feed, boxplot(gain~diet+supplement, col=c('darkblue', 'green', 'orange'), las=2, ylab='weight gain, pounds'))
with(feed, boxplot(gain~diet+supplement, las=2, ylab='weight gain, pounds'))
with(feed, boxplot(gain~tapply(gain, list(diet,supplement), mean), las=2, col=cols, ylim=c(0,35)))
with(feed, list(diet,supplement), mean))
with(feed, list(diet,supplement), mean)
with(feed, tapply(gain, list(diet,supplement), mean))
with(feed, barplot(tapply(gain, list(diet,supplement), mean), las=2, col=cols, ylim=c(0,35)))
cols <- c('darkblue', 'green', 'orange')
with(feed, barplot(tapply(gain, list(diet,supplement), mean), las=2, col=cols, ylim=c(0,35)))
with(feed, barplot(tapply(gain, list(diet,supplement), mean), las=1, col=cols, ylim=c(0,35)))
with(feed, barplot(tapply(gain, list(diet,supplement), mean), las=1, col=cols))
with(feed, barplot(tapply(gain, list(diet,supplement), mean), las=1, col=cols, besides=T))
with(feed, barplot(tapply(gain, list(diet,supplement), mean), las=1, col=cols, beside=T))
ylim=c(0,35)))
ylim=c(0,35))
ylim=c(0,35)))
with(feed, barplot(tapply(gain, list(diet,supplement), mean), las=1, col=cols, beside=T, ylim=c(0,35)))
legend(2.3, 35, labs, fill=cols)
labs <- c("barley", "oats", "wheat" )
legend(2.3, 35, labs, fill=cols)
legend(10.10, 35, labs, fill=cols)
legend(2.3, 35, labs, fill=cols)
mod1 <- aov(gain~supplement*diet, data=feed)
summary(mod1)
lm1 <- lm(gain~supplement*diet, data=feed)
mod2 <- anova(lm1)
summary(mod2)
mod2
with(feed, interaction.plot(diet, supplement, gain, col=c(1,2,3,4)))
with(feed, interaction.plot(diet, supplement, gain, col=c(2,3,4,5)))
mod1 <- aov(gain~supplement + diet, data=feed)
summary(mod1)
# taking out the interaction term
mod3 <- aov(gain~supplement + diet, data=feed)
summary(mod3)
# two way anova
mod1 <- aov(gain~supplement*diet, data=feed)
summary(mod1)
?TukeyHSD
tukeyHSD(mod3, 'diet')
require(graphics)
tukeyHSD(mod3, 'diet')
TukeyHSD(mod3, 'diet')
TukeyHSD(mod3, 'diet', ordered=TRUE)
len(feed)
length(feed)
feed
dim(feed)
plot(tm)
tm <- TukeyHSD(mod3, 'diet', ordered=TRUE)
plot(tm)
tm2 <- TukeyHSD(mod3, 'supplement', ordered=TRUE)
plot(tm2)
tm2 <- TukeyHSD(mod3, 'supplement', ordered=TRUE, las=1)
tm2 <- TukeyHSD(mod3, 'supplement', ordered=TRUE)
plot(tm2, las=2)
plot(mod3)
par(mfrow=c(2,2))
mod3
summary(mod3)
plot(mod3)
with(feed, tappy(supplement, diet, mean))
with(feed, tapply(supplement, diet, mean))
with(feed, tapply(supplement, list(diet), mean))
head(feed)
with(feed, tapply(gain, list(diet), mean))
with(feed, tapply(gain, list(supplement), mean))
bartlett.test(gain~diet, data=feed)
bartlett.test(gain~supplement, data=feed)
# Block Design
lab <- c(rep(1:4, each = 4))
antibiotic <- rep(c(1:4), 4)
results <- (c(9.3, 9.4, 9.6, 10, 9.4, 9.3, 9.8, 9.9, 9.2,
9.4, 9.5, 9.7, 9.7, 9.6, 10, 10.2))
lab
cbind(lab,antibiotic)
dlabs <- data.frame(cblind(lab, antibiotic, results))
dlabs <- data.frame(cbind(lab, antibiotic, results))
dlabs
is.factor(dlabs$lab)
levels(dlabs$lab)
dlabs$lab <- as.factor(dlabs$lab)
dlabs$antibiotic <- as.factor(dlabs$antibiotic)
is.factor(dlabs$lab)
levels(dlabs$lab)
with(dlabs, mod2 <- aov(results, antibiotic))
mod2 <- aov(results~antibiotic, data=dlabs)
summary(mod2)
mod3 <- aov(result~antibiotic*block, data=dlabs)
mod3 <- aov(result~antibiotic*lab, data=dlabs)
mod3 <- aov(results~antibiotic*lab, data=dlabs)
summary(mod3)
with(dlabs, interaction.plot(antibiotic, lab, results, col=c(1,2,3,4)))
mod3 <- aov(results~antibiotic + lab, data=dlabs)
summary(mod3)
mod4 <- aov(results~antibiotic + Error(lab), data=dlabs)
summary(mod4)
TukeyHSD(mod3, 'antibiotic', ordered=TRUE)
TukeyHSD(mod4, 'antibiotic', ordered=TRUE)
ad <- read.csv("Sales.csv", header=T)
ad <- with(ad, data.frame(sales, city=factor(city),
campaign = factor(campaign), time =
factor(time)))
ad
mod5 <- lm(sales ~ campaign * time, data = ad)
anova(mod5)
levels(ad$time)
mod6 <- aov(sales ~ campaign*time + Error(city),
data = ad)
summray(mod6)
summary(mod6)
a <- "obs salt block biomass1 10 1 11.82 15 1 21.33 20 1 8.84 25 1 10.45 30 1 2.26 35 1 8.47 10 2 15.18 15 2 22.39 20 2 8.110 25 2 8.511 30 2 3.312 35 2 7.313 10 3 22.614 15 3 19.815 20 3 6.116 25 3 8.217 30 3 6.118 35 3 5.219 10 4 7.120 15 4 9.921 20 4 1.022 25 4 2.823 30 4 0.724 35 4 2.2"
a
df <- "obs salt block biomass1 10 1 11.82 15 1 21.33 20 1 8.84 25 1 10.45 30 1 2.26 35 1 8.47 10 2 15.18 15 2 22.39 20 2 8.110 25 2 8.511 30 2 3.312 35 2 7.313 10 3 22.614 15 3 19.815 20 3 6.116 25 3 8.217 30 3 6.118 35 3 5.219 10 4 7.120 15 4 9.921 20 4 1.022 25 4 2.823 30 4 0.724 35 4 2.2"
?read.delim
biod <- read.delim(a, sep="\r")
?textConnection
biod <- read.delim(textConnection(a), sep="\r")
boid
class(biod)
biod
biod <- read.delim(textConnection(a), sep="\t")
biod
biod <- read.delim(textConnection(a), sep=" ")
biod
setwd("/Users/xuhong/Documents/Duke/Term 1 Courses/ENVIRON 710 Applied data analysis/Lab/Lab 8")
biod <- "obs salt block biomass
1 10 1 11.8
2 15 1 21.3
3 20 1 8.8
4 25 1 10.4
5 30 1 2.2
6 35 1 8.4
7 10 2 15.1
8 15 2 22.3
9 20 2 8.1
10 25 2 8.5
11 30 2 3.3
12 35 2 7.3
13 10 3 22.6
14 15 3 19.8
15 20 3 6.1
16 25 3 8.2
17 30 3 6.1
18 35 3 5.2
19 10 4 7.1
20 15 4 9.9
21 20 4 1.0
22 25 4 2.8
23 30 4 0.7
24 35 4 2.2"
biod <- read.delim(textConnection(biod), sep=" ")
biod
biod$salt
levels(biod$salt)
biod$salt <- factor(biod$salt)
levels(biod$salt)
# check the normal assumption
biod$block <- factor(biod$block)
boxplot(biod~salt)
with(biod, boxplot(biomass~salt))
source('~/.active-rstudio-document')
par(mfrow=c(1,1))
with(biod, boxplot(biomass~salt))
with(biod, tapply(biomass, salt, shapiro.test))
bartlett.test(biomass~salt, data=biod)
mod1 <- aov(biomass ~ salt + Error(block), data=biod)
summary(mod1)
mod4 <- aov(results~antibiotic + Error(lab), data=dlabs)
summary(mod4)
TukeyHSD(mod1, 'salt')
install.packages("agricolae")
require("agricolae")
?HSD.test
summary(mod6)
anova(mod5)
summary(mod1)
out <- with(biod, HSD.test(biomass, salt)
)
out <- with(biod, HSD.test(biomass, salt, DFerror = 5,
MSerror = 7.69))
summary(out)
out
bar.group(out$groups, density=6,
border="darkblue", las=1)
with(biod, tapply(biomass, list(salt), mean))
bar.group(out$groups, density=2, ylim=c(0,20)
border="darkblue", las=1)
with(biod, tapply(biomass, list(salt), mean))
bar.group(out$groups, density=2, ylim=c(0,20),
border="darkblue", las=1)
bar.group(out$groups, density=6, ylim=c(0,25),
border="darkblue", las=1)
par(mfrow=c(2,2))
plot(mod1)
#
mod1 <- aov(biomass ~ salt + Error(block), data=biod)
summary(mod1)
par(mfrow=c(2,2))
plot(mod1)
mod0 <- aov(biomass ~ salt + Error(block), data=biod)
mod0 <- aov(biomass ~ salt + block, data=biod)
plot(mod0)
mod0 <- aov(biomass ~ salt, data=biod)
plot(mod0)
with(biod, interaction.plot(salt, block, biomass, col = c(1,2,3,4)))
mod0 <- aov(biomass ~ salt + block, data=biod)
plot(mod0)
par(mfrow=c(2,2))
plot(mod0)
TukeyHSD(mod0, 'salt')
plot(TukeyHSD(mod0, 'salt'))
par(mfrow=c(1,1))
plot(TukeyHSD(mod0, 'salt'))
mod0 <- aov(biomass ~ salt + block, data=biod)
plot(mod0)
bartlett.test(biomass~salt*block, data=biod)
with(biod, tapply(biomass, block, shapiro.test))
thk <- read.csv("ScaleThickness.csv", sep=",")
head(thk)
levels(thk$supp)
factor(thk$dose)
with(biod, boxplot(thick~supp+dose))
with(thk, boxplot(thick~supp+dose))
with(thk, tapply(thick, supp, shapiro.test))
with(thk, tapply(thick, dose, shapiro.test))
bartlett.test(thick~supp, data=thk)
bartlett.test(thick~dose, data=thk)
bartlett.test(thick~dose*supp, data=thk)
mod2 <- aov(thick ~ dose + supp, data=thk)
mod2 <- aov(thick ~ dose*supp, data=thk)
summary(mod2)
with(thk, interaction.plot(dose, supp, thk, col = c(1,2)))
with(thk, interaction.plot(dose, supp, thk, col = c(1,2,3)))
with(thk, interaction.plot(dose, supp, thick, col = c(1,2,3)))
with(thk, interaction.plot(dose, supp, thick, col = c(1,2)))
with(thk, interaction.plot(supp, dose, thick, col = c(1,2,3)))
plot(TukeyHSD(mod2, 'dose'))
mod2 <- aov(thick ~ factor(dose)*supp, data=thk)
summary(mod2)
with(thk, interaction.plot(supp, dose, thick, col = c(1,2,3)))
plot(TukeyHSD(mod2, factor(dose))
)
plot(TukeyHSD(mod2, factor('dose')))
plot(TukeyHSD(mod2, 'supp'))
plot(TukeyHSD(mod2, factor('dose')))
TukeyHSD(mod2, factor('dose'))
par(mfrow=c(2,2))
plot(mod2)
